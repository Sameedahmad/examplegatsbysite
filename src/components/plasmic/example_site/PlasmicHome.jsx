// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5JPQX3dHSUEXyotTfHZPL8
// Component: 75xIV2ZO0VgZKF
import * as React from "react"
import { Link } from "gatsby"
import * as p from "@plasmicapp/react-web"
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
} from "@plasmicapp/react-web"
import SectionHeading from "../../SectionHeading" // plasmic-import: Yept6Kbtv0LSKx/component
import Columns from "../../Columns" // plasmic-import: zUrHpZIPmePfPJ/component
import ListItem from "../../ListItem" // plasmic-import: 7759f9YNNCJJf/component
import { MuiSelect } from "../../../../components/MuiSelect" // plasmic-import: olT9hmsk_kC9PM/codeComponent
import { ButtonGroup } from "@material-ui/core" // plasmic-import: BLMDAAuLxKNidP/codeComponent
import { Button } from "@material-ui/core" // plasmic-import: Kspz6rjB7EwU8d/codeComponent
import { Slider } from "antd" // plasmic-import: T6CkoIdUN2QQS/codeComponent
import { Menu } from "antd" // plasmic-import: Zu7vMO9d-nYmv/codeComponent
import MenuItem from "antd/lib/menu/MenuItem" // plasmic-import: la04aZxsKL3RL/codeComponent
import { Alert } from "antd" // plasmic-import: f4QoUY20_UvHv/codeComponent
import { Collapse } from "antd" // plasmic-import: wEQ0lqC5i1KLs/codeComponent
import CollapsePanel from "antd/lib/collapse/CollapsePanel" // plasmic-import: Ifk0uprdQHtGh/codeComponent
import { ArwesCard } from "../../../../components/Arwes" // plasmic-import: LVnMFr33GfC-Ad/codeComponent
import { Text } from "@arwes/core" // plasmic-import: CNYknDppsOQyAB/codeComponent
import { Figure } from "@arwes/core" // plasmic-import: CQOEXXeSbd_hOR/codeComponent
import { ProductGallery } from "../../../../components/ItemGallery" // plasmic-import: 1pZq-CUD7kcNwb/codeComponent
import { CmsGallery } from "../../../../components/ItemGallery" // plasmic-import: LG6e2WvabcbNZb/codeComponent
import { Reveal } from "../../../../components/Reveal" // plasmic-import: 6Wx1Np-kbQ2oON/codeComponent
import { Tilt } from "../../../../components/Tilt" // plasmic-import: 9v2FpCmyeNTZeS/codeComponent
import { ParallaxWrapper } from "../../../../components/ParallaxWrapper" // plasmic-import: iDdgo9-O3OnNs7/codeComponent
import { Embed } from "../../../../components/Embed" // plasmic-import: 7yb8umGcRBJ21u/codeComponent
import ColoredSection from "../../ColoredSection" // plasmic-import: DfU3ZmIn60eip9/component
import LinkButton from "../../LinkButton" // plasmic-import: f8pNAcrPRjP-Wu/component
import { useScreenVariants } from "./PlasmicGlobalVariant__Screen" // plasmic-import: MqnXnJNNzE7ELH/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css"
import * as defaultcss from "../plasmic__default_style.module.css" // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_example_site.module.css" // plasmic-import: 5JPQX3dHSUEXyotTfHZPL8/projectcss
import * as sty from "./PlasmicHome.module.css" // plasmic-import: 75xIV2ZO0VgZKF/css
import PlasmicLogoIcon from "./icons/PlasmicIcon__PlasmicLogo" // plasmic-import: C2UdNRLsDLsqvs/icon
import IconIcon from "./icons/PlasmicIcon__Icon" // plasmic-import: 0IVdHXJW1AtHrg/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2" // plasmic-import: s516FuIX0UMS1L/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3" // plasmic-import: l988RaHhVreX4M/icon
import Icon8Icon from "../plasmic_kit_website_components/icons/PlasmicIcon__Icon8" // plasmic-import: f4GO4W3yZm/icon
import image0Gx7NRcmqwRyuL from "./images/image.png" // plasmic-import: 0Gx7nRCMQWRyuL/picture
import image15ZrcW4LrcMdpL9 from "./images/image15.png" // plasmic-import: zrc-w4LRCMdpL9/picture
import image67S1YLsH3ICiObS from "./images/image6.png" // plasmic-import: 7s1yLsH3iCIObS/picture
import image5ZpsNxBaNyg8Ma from "./images/image5.png" // plasmic-import: zpsNX_BaNyg8MA/picture
import image7Jn1TsUn3UtDi from "./images/image7.png" // plasmic-import: Jn1ts-Un3UTDi_/picture
import image8Ero6JrI32QxHk from "./images/image8.png" // plasmic-import: ero6jrI32qx_hk/picture
import image14IbGyfy7Lzz8ZyO from "./images/image14.svg" // plasmic-import: IbGyfy7Lzz8zyO/picture

export const PlasmicHome__VariantProps = new Array()

export const PlasmicHome__ArgProps = new Array()

function PlasmicHome__RenderFunc(props) {
  const { variants, args, overrides, forNode, dataFetches } = props
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants(),
  })

  return (
    <React.Fragment>
      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div className={classNames(defaultcss.all, sty.box__myzal)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__tDgt4)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__qWqmQ)}
              >
                <p.PlasmicLink
                  className={classNames(defaultcss.all, sty.link__d9Cg)}
                  component={Link}
                  href={"https://www.plasmic.app"}
                  platform={"gatsby"}
                >
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__pwYgm)}
                    role={"img"}
                    src={image0Gx7NRcmqwRyuL}
                  />
                </p.PlasmicLink>
              </p.Stack>

              {(
                hasVariant(globalVariants, "screen", "mobile") ? false : true
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__jbrAi)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__t4PTh
                    )}
                  >
                    {"Page builder, meet Gatsby Visually:"}
                  </div>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__nuNch)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__x0F5O
                      )}
                    >
                      <span>
                        <React.Fragment>{"Introducing "}</React.Fragment>
                        <span style={{ fontWeight: 700 }}>{"Plasmic 2.0"}</span>
                        <React.Fragment>
                          {
                            ": the web design tool that integrates seamlessly with your codebase and lets you drag-and-drop your real production React components."
                          }
                        </React.Fragment>
                      </span>
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box___6IjG5
                      )}
                    >
                      {
                        "Empower your team with your design system, interactive components, production data, and much more."
                      }
                    </div>
                  </p.Stack>
                </p.Stack>
              ) : null}

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__oPyx8)}
              >
                <img
                  alt={""}
                  className={classNames(defaultcss.img, sty.img__we1CB)}
                  role={"img"}
                  src={image15ZrcW4LrcMdpL9}
                />

                <p.PlasmicLink
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.link__vlgQ4
                  )}
                  component={Link}
                  href={"https://plasmic.app/proj/code-components"}
                  platform={"gatsby"}
                  target={"_blank"}
                >
                  {"Edit this page in Plasmic!"}
                </p.PlasmicLink>
              </p.Stack>
            </p.Stack>
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.box___5T88P)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box___8NtCx)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box___9Kea)}
              >
                <SectionHeading
                  data-plasmic-name={"sectionHeading"}
                  data-plasmic-override={overrides.sectionHeading}
                  className={classNames("__wab_instance", sty.sectionHeading)}
                />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__h8Vij
                  )}
                >
                  {
                    "Tap into the full universe of open-source npm libraries. Or expose components from your own codebase."
                  }
                </div>
              </p.Stack>

              <Columns
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                className={classNames("__wab_instance", sty.columns)}
                slot={null}
              >
                {null}
              </Columns>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__raHdp)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box___9FMw0)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__y0NxB)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__f2ZjQ)}
                  >
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__bMm2B
                      )}
                    >
                      {"Bring any design system."}
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__xjqOv
                      )}
                    >
                      {
                        "Use your own design system, or use off-the-shelf libraries complete with all the theming and customizations you've applied in your codebase. Seamlessly interweave Plasmic-designed content and code components."
                      }
                    </div>

                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__oDxvY
                      )}
                    >
                      {"Roboto"}
                    </div>
                  </p.Stack>
                </p.Stack>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__vSFb
                      )}
                    >
                      {"@material-ui/core"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__f62Vl)}
                  title={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__movm
                      )}
                    >
                      {"Material UI"}
                    </div>
                  }
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__uubU)}
                  >
                    <MuiSelect
                      className={classNames(
                        "__wab_instance",
                        sty.muiSelect__zw3Ul
                      )}
                      label={"Delivery method"}
                      options={[
                        { value: "standard", label: "Standard Shipping" },
                        { value: "expedited", label: "Expedited Shipping" },
                        { value: "sameday", label: "Same-Day Delivery" },
                        { value: "pickup", label: "Scheduled Pickup" },
                      ]}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box___2RpNf)}
                    >
                      <ButtonGroup
                        className={classNames(
                          "__wab_instance",
                          sty.muiButtonGroup___7IEFu
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__pfnOg
                          )}
                        >
                          {"md"}
                        </Button>

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__n3D26
                          )}
                        >
                          {"lg"}
                        </Button>

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__dk1Iu
                          )}
                        >
                          {"xl"}
                        </Button>

                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.muiButton__yY7JW
                          )}
                        >
                          {"xxl"}
                        </Button>
                      </ButtonGroup>
                    </p.Stack>
                  </p.Stack>
                </ListItem>

                {false ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box___6IuDv)}
                  >
                    <ListItem
                      _package={"@material-ui/core"}
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__meaSz
                      )}
                      title={"Material UI Select"}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__yMeYi)}
                      >
                        <MuiSelect
                          className={classNames(
                            "__wab_instance",
                            sty.muiSelect__uc1Ze
                          )}
                          label={"Delivery method"}
                          options={[
                            { value: "standard", label: "Standard Shipping" },
                            { value: "expedited", label: "Expedited Shipping" },
                            { value: "sameday", label: "Same-Day Delivery" },
                            { value: "pickup", label: "Scheduled Pickup" },
                          ]}
                        />
                      </p.Stack>
                    </ListItem>

                    <ListItem
                      _package={"@material-ui/core"}
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__fVDyX
                      )}
                      title={"Material UI Button Group"}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box___1Bik)}
                      >
                        <ButtonGroup
                          className={classNames(
                            "__wab_instance",
                            sty.muiButtonGroup___6OI1N
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__nVtjC
                            )}
                          >
                            {"md"}
                          </Button>

                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__y8X7Q
                            )}
                          >
                            {"lg"}
                          </Button>

                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__nidwt
                            )}
                          >
                            {"xl"}
                          </Button>

                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.muiButton__gpeHc
                            )}
                          >
                            {"xxl"}
                          </Button>
                        </ButtonGroup>
                      </p.Stack>
                    </ListItem>
                  </p.Stack>
                ) : null}
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box___6NuOe)}
                  >
                    <ListItem
                      _package={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__ccx4L
                          )}
                        >
                          {"antd"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__fqFx
                      )}
                      title={
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__atvdc
                          )}
                        >
                          {"Ant Design"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(defaultcss.all, sty.box__mphFs)}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__kWMdh)}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.box__cr6Ql
                            )}
                          >
                            <Slider
                              className={classNames(
                                "__wab_instance",
                                sty.slider___3Cggn
                              )}
                              range={true}
                            />

                            <Menu
                              className={classNames(
                                "__wab_instance",
                                sty.menu__gbH4
                              )}
                              defaultSelectedKeys={["opt3"]}
                            >
                              <MenuItem
                                className={classNames(
                                  "__wab_instance",
                                  sty.menuItem__kSs7P
                                )}
                                key={"opt1"}
                              >
                                {"Home"}
                              </MenuItem>

                              <MenuItem
                                className={classNames(
                                  "__wab_instance",
                                  sty.menuItem___2Y6F
                                )}
                                key={"opt2"}
                              >
                                {"Features"}
                              </MenuItem>

                              <MenuItem
                                className={classNames(
                                  "__wab_instance",
                                  sty.menuItem___7Fq74
                                )}
                                key={"opt3"}
                              >
                                {"Case studies"}
                              </MenuItem>
                            </Menu>
                          </p.Stack>

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.box__uYQlv
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.box__spMd7
                              )}
                            >
                              <Alert
                                className={classNames(
                                  "__wab_instance",
                                  sty.alert__minyv
                                )}
                                description={
                                  <div
                                    className={classNames(
                                      defaultcss.all,
                                      sty.box__d6Qv1
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        defaultcss.all,
                                        defaultcss.__wab_text,
                                        sty.box__jzBI
                                      )}
                                    >
                                      {"Thank you for your order! "}
                                    </div>

                                    <PlasmicLogoIcon
                                      className={classNames(
                                        defaultcss.all,
                                        sty.svg__aIpxL
                                      )}
                                      role={"img"}
                                    />
                                  </div>
                                }
                                message={"Purchase complete"}
                                showIcon={true}
                                type={"success"}
                              />

                              <Alert
                                className={classNames(
                                  "__wab_instance",
                                  sty.alert___22Lvv
                                )}
                                description={"Please fill all required fields."}
                                message={"Error submitting form"}
                                showIcon={true}
                                type={"error"}
                              />
                            </div>

                            <div
                              className={classNames(
                                defaultcss.all,
                                sty.box__truk
                              )}
                            >
                              <Collapse
                                className={classNames(
                                  "__wab_instance",
                                  sty.collapse___4TpB
                                )}
                                defaultActiveKey={["1"]}
                              >
                                <CollapsePanel
                                  className={classNames(
                                    "__wab_instance",
                                    sty.collapsePanel__kE3T
                                  )}
                                  header={"Shipping"}
                                  key={"1"}
                                >
                                  <p.Stack
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      defaultcss.all,
                                      sty.box___1NwXo
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        defaultcss.all,
                                        defaultcss.__wab_text,
                                        sty.box__zrqfN
                                      )}
                                    >
                                      {"Standard shipping"}
                                    </div>

                                    <div
                                      className={classNames(
                                        defaultcss.all,
                                        defaultcss.__wab_text,
                                        sty.box__buVso
                                      )}
                                    >
                                      {"2 South Park\nSan Francisco, CA 94107"}
                                    </div>

                                    <p.PlasmicLink
                                      className={classNames(
                                        defaultcss.all,
                                        defaultcss.__wab_text,
                                        sty.link__nuyal
                                      )}
                                      component={Link}
                                      href={"#"}
                                      platform={"gatsby"}
                                    >
                                      {"Change"}
                                    </p.PlasmicLink>
                                  </p.Stack>
                                </CollapsePanel>

                                <CollapsePanel
                                  className={classNames(
                                    "__wab_instance",
                                    sty.collapsePanel__hmtU
                                  )}
                                  header={"Payment method"}
                                  key={"2"}
                                >
                                  <p.Stack
                                    as={"div"}
                                    hasGap={true}
                                    className={classNames(
                                      defaultcss.all,
                                      sty.box__a6P
                                    )}
                                  >
                                    <div
                                      className={classNames(
                                        defaultcss.all,
                                        defaultcss.__wab_text,
                                        sty.box___0VTi
                                      )}
                                    >
                                      {"Using gift card balance."}
                                    </div>

                                    <p.PlasmicLink
                                      className={classNames(
                                        defaultcss.all,
                                        defaultcss.__wab_text,
                                        sty.link__vprm
                                      )}
                                      component={Link}
                                      href={"#"}
                                      platform={"gatsby"}
                                    >
                                      {"Change"}
                                    </p.PlasmicLink>
                                  </p.Stack>
                                </CollapsePanel>
                              </Collapse>
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </div>
                    </ListItem>
                  </p.Stack>
                ) : null}
                {false ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__j9EbY)}
                  >
                    <ListItem
                      _package={"antd"}
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__xC4A
                      )}
                      title={"Ant Slider"}
                    >
                      <Slider
                        className={classNames(
                          "__wab_instance",
                          sty.slider__qrxZ
                        )}
                        range={true}
                      />
                    </ListItem>

                    <ListItem
                      _package={"antd"}
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__u6XiX
                      )}
                      title={"Ant Menu"}
                    >
                      <Menu
                        className={classNames(
                          "__wab_instance",
                          sty.menu___5RtEu
                        )}
                      >
                        <MenuItem
                          className={classNames(
                            "__wab_instance",
                            sty.menuItem__mknMn
                          )}
                          key={"opt1"}
                        >
                          {"Home"}
                        </MenuItem>

                        <MenuItem
                          className={classNames(
                            "__wab_instance",
                            sty.menuItem__x4ARf
                          )}
                          key={"opt2"}
                        >
                          {"Features"}
                        </MenuItem>

                        <MenuItem
                          className={classNames(
                            "__wab_instance",
                            sty.menuItem__gHSn
                          )}
                          key={"opt3"}
                        >
                          {"Case studies"}
                        </MenuItem>
                      </Menu>
                    </ListItem>
                  </p.Stack>
                ) : null}
                {false ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(defaultcss.all, sty.box__hzZ0K)}
                  >
                    <ListItem
                      _package={"antd"}
                      className={classNames(
                        "__wab_instance",
                        sty.listItem__afVoM
                      )}
                      title={"Ant Alert"}
                    >
                      <Alert
                        className={classNames(
                          "__wab_instance",
                          sty.alert__a5W2
                        )}
                        description={
                          <div
                            className={classNames(
                              defaultcss.all,
                              sty.box__fyUsQ
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box___4UBg2
                              )}
                            >
                              {"Thank you for your order! "}
                            </div>

                            <PlasmicLogoIcon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__fvz3Q
                              )}
                              role={"img"}
                            />
                          </div>
                        }
                        message={"Purchase complete"}
                        showIcon={true}
                      />

                      <Alert
                        className={classNames(
                          "__wab_instance",
                          sty.alert__r9Bns
                        )}
                        description={"Please fill all required fields."}
                        message={"Error submitting form"}
                        showIcon={true}
                      />
                    </ListItem>

                    <ListItem
                      _package={"antd"}
                      className={classNames(
                        "__wab_instance",
                        sty.listItem___2N9Ux
                      )}
                      title={"Ant Collapse"}
                    >
                      <Collapse
                        className={classNames(
                          "__wab_instance",
                          sty.collapse__akSbq
                        )}
                      >
                        <CollapsePanel
                          className={classNames(
                            "__wab_instance",
                            sty.collapsePanel__hEiNl
                          )}
                          header={"Shipping"}
                          key={"1"}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.box__njQiV
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box__rt0Ow
                              )}
                            >
                              {"Standard shipping"}
                            </div>

                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box___7GcJ
                              )}
                            >
                              {"2 South Park\nSan Francisco, CA 94107"}
                            </div>

                            <p.PlasmicLink
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.link__skCRg
                              )}
                              component={Link}
                              href={"#"}
                              platform={"gatsby"}
                            >
                              {"Change"}
                            </p.PlasmicLink>
                          </p.Stack>
                        </CollapsePanel>

                        <CollapsePanel
                          className={classNames(
                            "__wab_instance",
                            sty.collapsePanel__b8UGm
                          )}
                          header={"Payment method"}
                          key={"2"}
                        >
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              defaultcss.all,
                              sty.box__zObzR
                            )}
                          >
                            <div
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.box___7Lyf
                              )}
                            >
                              {"Using gift card balance."}
                            </div>

                            <p.PlasmicLink
                              className={classNames(
                                defaultcss.all,
                                defaultcss.__wab_text,
                                sty.link___1V5O2
                              )}
                              component={Link}
                              href={"#"}
                              platform={"gatsby"}
                            >
                              {"Change"}
                            </p.PlasmicLink>
                          </p.Stack>
                        </CollapsePanel>
                      </Collapse>
                    </ListItem>
                  </p.Stack>
                ) : null}
              </p.Stack>

              <div className={classNames(defaultcss.all, sty.box__vxUpf)}>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box___1AmUj)}
                >
                  <ListItem
                    _package={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__yx5J
                        )}
                      >
                        {"@arwes/core"}
                      </div>
                    }
                    className={classNames(
                      "__wab_instance",
                      sty.listItem__fU9F5
                    )}
                    title={
                      <div
                        className={classNames(
                          defaultcss.all,
                          defaultcss.__wab_text,
                          sty.box__whmFc
                        )}
                      >
                        {"Arwes Card"}
                      </div>
                    }
                  >
                    <div className={classNames(defaultcss.all, sty.box__wfPcU)}>
                      <ArwesCard
                        data-plasmic-name={"arwesCard"}
                        data-plasmic-override={overrides.arwesCard}
                        caption={"Photo of the Orion nebula taken by Hubble."}
                        className={classNames("__wab_instance", sty.arwesCard)}
                        title={true ? "Nebula" : null}
                      >
                        <div
                          className={classNames(defaultcss.all, sty.box__derIk)}
                        >
                          <Text
                            as={"h1"}
                            className={classNames(
                              "__wab_instance",
                              sty.arwesText__qkj4H
                            )}
                          >
                            {true ? (
                              <h1
                                data-plasmic-name={"h1"}
                                data-plasmic-override={overrides.h1}
                                className={classNames(
                                  defaultcss.h1,
                                  defaultcss.__wab_text,
                                  sty.h1
                                )}
                              >
                                {"NEBULA"}
                              </h1>
                            ) : null}
                          </Text>

                          <Text
                            as={"p"}
                            className={classNames(
                              "__wab_instance",
                              sty.arwesText__cXr6
                            )}
                          >
                            {
                              "A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. Originally, the term was used to describe any diffused astronomical object, including galaxies beyond the Milky Way."
                            }
                          </Text>

                          <Figure
                            data-plasmic-name={"arwesFigure"}
                            data-plasmic-override={overrides.arwesFigure}
                            alt={"Orion"}
                            className={classNames(
                              "__wab_instance",
                              sty.arwesFigure
                            )}
                            src={
                              "https://playground.arwes.dev/assets/images/wallpaper.jpg"
                            }
                          >
                            {"Photo of the Orion nebula taken by Hubble."}
                          </Figure>
                        </div>
                      </ArwesCard>
                    </div>
                  </ListItem>
                </p.Stack>
              </div>
            </p.Stack>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__huzMx)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__umNi5)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__x74AR
                  )}
                >
                  {"Access your real production data."}
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__g2DdX
                  )}
                >
                  {
                    "Bring components of any complexity—components that fetch data, use application/session state, and more."
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__dVPzd)}
              >
                <ListItem
                  _package={null}
                  className={classNames("__wab_instance", sty.listItem__tgFul)}
                  title={
                    "Data from Shopify product catalog (via Storefront GraphQL API)"
                  }
                >
                  <ProductGallery
                    data-plasmic-name={"productGallery"}
                    data-plasmic-override={overrides.productGallery}
                    className={classNames("__wab_instance", sty.productGallery)}
                    scroller={true}
                  />
                </ListItem>
              </p.Stack>

              <ListItem
                _package={null}
                className={classNames("__wab_instance", sty.listItem__lcb3H)}
                title={"Data from Contentful CMS (via REST API)"}
              >
                <div className={classNames(defaultcss.all, sty.box___7Zuvy)}>
                  <CmsGallery
                    data-plasmic-name={"cmsGallery"}
                    data-plasmic-override={overrides.cmsGallery}
                    className={classNames("__wab_instance", sty.cmsGallery)}
                    scroller={true}
                  />
                </div>
              </ListItem>
            </p.Stack>

            <div className={classNames(defaultcss.all, sty.box__x0XGy)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box__amNS)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__yEc2)}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__ulwW3
                    )}
                  >
                    {"Extend Plasmic with any interaction."}
                  </div>

                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__dahaY
                    )}
                  >
                    {
                      "You can introduce some very general-purpose building blocks that extend Plasmic's feature set."
                    }
                  </div>
                </p.Stack>

                <ListItem
                  _package={"react-reveal"}
                  className={classNames("__wab_instance", sty.listItem__jX1Qa)}
                  title={"Reveal on scroll"}
                >
                  <div className={classNames(defaultcss.all, sty.box___9NO5)}>
                    <Reveal
                      data-plasmic-name={"reveal"}
                      data-plasmic-override={overrides.reveal}
                      cascade={true}
                      className={classNames("__wab_instance", sty.reveal)}
                      direction={"up"}
                      effect={"fade"}
                    >
                      <div
                        className={classNames(defaultcss.all, sty.box__qcMkW)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__qVthQ
                          )}
                        >
                          {"JAY-Z"}
                        </div>
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(defaultcss.all, sty.box__rpWpU)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            defaultcss.__wab_text,
                            sty.box__wsspp
                          )}
                        >
                          {"FOLLOW ARTIST"}
                        </div>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(defaultcss.all, sty.box__rgRrv)}
                        >
                          <p.PlasmicLink
                            className={classNames(
                              defaultcss.all,
                              sty.link__imVbq
                            )}
                            component={Link}
                            href={"https://www.facebook.com/JayZ"}
                            platform={"gatsby"}
                            target={"_blank"}
                          >
                            <IconIcon
                              className={classNames(
                                defaultcss.all,
                                sty.svg__pmV9P
                              )}
                              role={"img"}
                            />
                          </p.PlasmicLink>

                          <p.PlasmicLink
                            className={classNames(
                              defaultcss.all,
                              sty.link__mXr78
                            )}
                            component={Link}
                            href={"https://twitter.com/sc?lang=en"}
                            platform={"gatsby"}
                            target={"_blank"}
                          >
                            <Icon2Icon
                              className={classNames(
                                defaultcss.all,
                                sty.svg___6APb3
                              )}
                              role={"img"}
                            />
                          </p.PlasmicLink>

                          <p.PlasmicLink
                            className={classNames(
                              defaultcss.all,
                              sty.link___2TWjL
                            )}
                            component={Link}
                            href={"https://lifeandtimes.com/"}
                            platform={"gatsby"}
                            target={"_blank"}
                          >
                            <Icon3Icon
                              className={classNames(
                                defaultcss.all,
                                sty.svg___3Fxrb
                              )}
                              role={"img"}
                            />
                          </p.PlasmicLink>
                        </p.Stack>
                      </p.Stack>
                    </Reveal>
                  </div>
                </ListItem>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box___3I1Vi
                      )}
                    >
                      {"react-parallax-tilt"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__cLAgH)}
                  title={"3D parallax tilt effect"}
                >
                  <div className={classNames(defaultcss.all, sty.box__dUi2U)}>
                    <Tilt
                      data-plasmic-name={"tilt"}
                      data-plasmic-override={overrides.tilt}
                      className={classNames("__wab_instance", sty.tilt)}
                      reset={false}
                      tiltReverse={true}
                      trackOnWindow={false}
                    >
                      <div
                        className={classNames(defaultcss.all, sty.box__hDjs7)}
                      >
                        <div
                          className={classNames(
                            defaultcss.all,
                            sty.box__cClK1,
                            hasVariant(globalVariants, "screen", "mobile")
                              ? "inner-element"
                              : "inner-element"
                          )}
                        />
                      </div>
                    </Tilt>
                  </div>
                </ListItem>

                <ListItem
                  _package={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__kv05R
                      )}
                    >
                      {"react-scroll-parallax"}
                    </div>
                  }
                  className={classNames("__wab_instance", sty.listItem__rc1Em)}
                  title={"Parallax scroll effect"}
                >
                  <div className={classNames(defaultcss.all, sty.box__kX9En)}>
                    <div className={classNames(defaultcss.all, sty.box__zLsPu)}>
                      <ParallaxWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__qkQhy
                        )}
                        y={[-20, 20]}
                      >
                        <img
                          alt={""}
                          className={classNames(defaultcss.img, sty.img___03ZO)}
                          loading={"lazy"}
                          role={"img"}
                          src={image67S1YLsH3ICiObS}
                        />
                      </ParallaxWrapper>

                      <ParallaxWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__xCqEu
                        )}
                        y={[40, -40]}
                      >
                        <img
                          alt={""}
                          className={classNames(defaultcss.img, sty.img__tBdEb)}
                          loading={"lazy"}
                          role={"img"}
                          src={image5ZpsNxBaNyg8Ma}
                        />
                      </ParallaxWrapper>

                      <ParallaxWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__h51U9
                        )}
                        y={[-20, 20]}
                      >
                        <img
                          alt={""}
                          className={classNames(defaultcss.img, sty.img__nNWc)}
                          loading={"lazy"}
                          role={"img"}
                          src={image7Jn1TsUn3UtDi}
                        />
                      </ParallaxWrapper>

                      <ParallaxWrapper
                        className={classNames(
                          "__wab_instance",
                          sty.parallax__kmBv0
                        )}
                        y={[99, -99]}
                      >
                        <img
                          alt={""}
                          className={classNames(defaultcss.img, sty.img__vXlj8)}
                          loading={"lazy"}
                          role={"img"}
                          src={image8Ero6JrI32QxHk}
                        />
                      </ParallaxWrapper>
                    </div>
                  </div>
                </ListItem>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.box__mjeim)}
                >
                  <ListItem
                    _package={null}
                    className={classNames(
                      "__wab_instance",
                      sty.listItem___0O5AE
                    )}
                    title={'A generic "Embed Code" component'}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(defaultcss.all, sty.box__wwj1J)}
                    >
                      <div
                        className={classNames(defaultcss.all, sty.box__eaKhk)}
                      >
                        <Embed
                          data-plasmic-name={"embed"}
                          data-plasmic-override={overrides.embed}
                          className={classNames("__wab_instance", sty.embed)}
                          code={
                            '<a class="twitter-timeline" href="https://twitter.com/plasmicapp?ref_src=twsrc%5Etfw">Tweets by plasmicapp</a> <script async src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>'
                          }
                        />
                      </div>
                    </p.Stack>
                  </ListItem>
                </p.Stack>
              </p.Stack>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(defaultcss.all, sty.box__gKg2V)}
            >
              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___1LS7
                )}
              >
                {"How does this work?"}
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__izXwh
                )}
              >
                <span>
                  <React.Fragment>
                    {
                      "Plasmic is a page builder and design tool that has a kernel which "
                    }
                  </React.Fragment>
                  <span style={{ fontStyle: "italic" }}>
                    {"runs from within your application"}
                  </span>
                  <React.Fragment>
                    {
                      '. We call the Plasmic project "hosted" by your application.'
                    }
                  </React.Fragment>
                </span>
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___09Ak6
                )}
              >
                {
                  "This tight integration is what lets you easily and seamlessly expose code components of arbitrary complexity. They can connect to your application state, fetch data, implement complex behavior, and much more. All without bundling shenanigans."
                }
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box___624Sr
                )}
              >
                {
                  "You can set the app host to be your localhost dev server (complete with hot reload working!) OR your actual production site."
                }
              </div>

              <div
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.box__wh2UQ
                )}
              >
                <span>
                  <span style={{ fontWeight: 700 }}>
                    {"What does it take to enable this for your codebase? "}
                  </span>
                  <React.Fragment>
                    {
                      "Simply add a snippet of code, and now you can configure any Plasmic project to use your application URL as the host. Then expose any component by calling registerComponent() on it. That's it!"
                    }
                  </React.Fragment>
                </span>
              </div>

              <p.PlasmicLink
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.link__lyE4M
                )}
                component={Link}
                href={"https://docs.plasmic.app/learn/code-components/"}
                platform={"gatsby"}
                target={"_blank"}
              >
                {"See developer docs ->"}
              </p.PlasmicLink>

              <p.PlasmicLink
                className={classNames(
                  defaultcss.all,
                  defaultcss.__wab_text,
                  sty.link__jOu3U
                )}
                component={Link}
                href={"https://github.com/plasmicapp/code-components"}
                platform={"gatsby"}
                target={"_blank"}
              >
                {"See this project's host repo on GitHub ->"}
              </p.PlasmicLink>
            </p.Stack>

            <ColoredSection
              data-plasmic-name={"coloredSection"}
              data-plasmic-override={overrides.coloredSection}
              className={classNames("__wab_instance", sty.coloredSection)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(defaultcss.all, sty.box___7Mxat)}
              >
                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__ht3Om
                  )}
                >
                  {
                    "Plasmic lets anyone build and deploy visual content—from full pages to sections of pages—within any tech stack."
                  }
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box___3BBl4
                  )}
                >
                  {
                    "Plasmic powers some of the largest websites in the world. Companies from boutique brands to Fortune 500s use Plasmic to eliminate swaths of development work and let marketing and design teams iterate incredibly fast."
                  }
                </div>

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__adc
                  )}
                >
                  {
                    "And now with code components, developers can equip their whole team with the exact right set of building blocks to move even faster."
                  }
                </div>

                <LinkButton
                  data-plasmic-name={"linkButton"}
                  data-plasmic-override={overrides.linkButton}
                  className={classNames("__wab_instance", sty.linkButton)}
                  href={"https://studio.plasmic.app/signup"}
                  icon={
                    <Icon8Icon
                      className={classNames(defaultcss.all, sty.svg___2IyDi)}
                      role={"img"}
                    />
                  }
                  label={
                    <div
                      className={classNames(
                        defaultcss.all,
                        defaultcss.__wab_text,
                        sty.box__sCzaa
                      )}
                    >
                      {"Try Plasmic for free"}
                    </div>
                  }
                  type={["white", "rightIcon"]}
                />

                <div className={classNames(defaultcss.all, sty.box__lnYiK)} />

                <div
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.box__fdNdc
                  )}
                >
                  {
                    "Code components are just the beginning of what application hosting unlocks."
                  }
                </div>

                <p.Stack
                  as={p.PlasmicLink}
                  hasGap={true}
                  className={classNames(defaultcss.all, sty.link___3Hcal)}
                  component={Link}
                  href={"https://twitter.com/plasmicapp"}
                  platform={"gatsby"}
                  target={"_blank"}
                >
                  <div
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.box__aJaXv
                    )}
                  >
                    {"Follow @plasmicapp on Twitter to see what's next."}
                  </div>
                </p.Stack>

                <p.PlasmicLink
                  className={classNames(defaultcss.all, sty.link__oqw1X)}
                  component={Link}
                  href={"https://www.plasmic.app"}
                  platform={"gatsby"}
                >
                  <img
                    alt={""}
                    className={classNames(defaultcss.img, sty.img__ljphK)}
                    loading={"lazy"}
                    role={"img"}
                    src={image14IbGyfy7Lzz8ZyO}
                  />
                </p.PlasmicLink>
              </p.Stack>
            </ColoredSection>
          </p.Stack>
        </div>
      </div>
    </React.Fragment>
  )
}

const PlasmicDescendants = {
  root: [
    "root",
    "sectionHeading",
    "columns",
    "arwesCard",
    "h1",
    "arwesFigure",
    "productGallery",
    "cmsGallery",
    "reveal",
    "tilt",
    "embed",
    "coloredSection",
    "linkButton",
  ],

  sectionHeading: ["sectionHeading"],
  columns: ["columns"],
  arwesCard: ["arwesCard", "h1", "arwesFigure"],
  h1: ["h1"],
  arwesFigure: ["arwesFigure"],
  productGallery: ["productGallery"],
  cmsGallery: ["cmsGallery"],
  reveal: ["reveal"],
  tilt: ["tilt"],
  embed: ["embed"],
  coloredSection: ["coloredSection", "linkButton"],
  linkButton: ["linkButton"],
}

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHome__ArgProps,
      internalVariantPropNames: PlasmicHome__VariantProps,
    })

    const { dataFetches } = props
    return PlasmicHome__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName,
    })
  }
  if (nodeName === "root") {
    func.displayName = "PlasmicHome"
  } else {
    func.displayName = `PlasmicHome.${nodeName}`
  }
  return func
}

export const PlasmicHome = Object.assign(
  // Top-level PlasmicHome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    sectionHeading: makeNodeComponent("sectionHeading"),
    columns: makeNodeComponent("columns"),
    arwesCard: makeNodeComponent("arwesCard"),
    h1: makeNodeComponent("h1"),
    arwesFigure: makeNodeComponent("arwesFigure"),
    productGallery: makeNodeComponent("productGallery"),
    cmsGallery: makeNodeComponent("cmsGallery"),
    reveal: makeNodeComponent("reveal"),
    tilt: makeNodeComponent("tilt"),
    embed: makeNodeComponent("embed"),
    coloredSection: makeNodeComponent("coloredSection"),
    linkButton: makeNodeComponent("linkButton"),
    // Metadata about props expected for PlasmicHome
    internalVariantProps: PlasmicHome__VariantProps,
    internalArgProps: PlasmicHome__ArgProps,
  }
)

export default PlasmicHome
/* prettier-ignore-end */
